@page "/companies"
@using ActivationReport.Components
@using ActivationReport.Models
@using Microsoft.EntityFrameworkCore

<article>
    <h3>Управление компаниями</h3>

    @if (isEdit == false)
    {
        <p class="row justify-content-between">
            <button class="btn btn-outline-primary col-3" @onclick="loadData">Обновить данные</button>
            <button class="btn btn-primary col-3" @onclick="() => isEdit = true">Создать новую компанию</button>
        </p>

        @if (companies != null && companies.Count > 0)
        {
            @foreach (var comp in companies.OrderBy(c => c.Name).ToList())
            {
                <p class="row">
                    <button class="btn btn-outline-success col-2 me-1" @onclick="() => {eCompany = comp; isEdit = true;}">Редактировать</button>
                    <button class="btn btn-danger col-1" @onclick="() => deleteCompany(comp)">Удалить</button>
                    <div class="col-8 align-content-between">
                        <label class="ms-1  fs-5 col-5">@comp.Name</label>

                        @if (comp.Email != null)
                        {
                            <button class="btn btn-dark me-1 col-1" disabled> @@ </button>
                        } else
                        {
                            <label class=" me-1 col-1"/>
                        }

                        @if (comp.MonthlyReport)
                        {                            
                            <button class="btn btn-warning me-1 col-3" disabled>Ежемесячный</button>                              
                        } 
                        else 
                        {
                            <label class="col-3 me-1"/>
                        }
                        @if (comp.Staff)
                        {
                            <button class="btn btn-info col-2" disabled>Сотрудник</button>
                        }
                    </div>                    
                </p>
            }
        } 
        else
        {
            <div class="row">Нет данных по компаниям</div>           
        }                
    } 
    else
    {
        <EditCompany @bind-Edit="isEdit" @bind-ECompany="eCompany" />
    }
</article>


@code {
    private bool isEdit = false;
    private Company eCompany = new Company
        {
            Cards = new List<Card>()
        };

    private List<Company> companies;

    private void loadData()
    {
        companies = Helpers.LoadCompaniesData();
    }

    private async Task deleteCompany(Company company)
    {
        bool result = await Application.Current.MainPage.DisplayAlert("Подтверждение действия", "Подтвердите удаление " + company.Name, "Подтвердить", "Отмена");

        if (result)
        {
            using (var db = new AppDBContext())
            {
                db.Companies.Remove(company);
                db.SaveChanges();
                loadData();
            }
            await Application.Current.MainPage.DisplayAlert("Подтверждение действия", "Компания удалена", "Ок");
        }      
    }

    protected override async Task OnInitializedAsync() => loadData();
}